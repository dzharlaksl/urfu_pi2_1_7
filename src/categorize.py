import re

# Категории и приоритеты
categories = {        
    0: 'Не определено',
    1: 'Финансовая система',
    2: 'Сетевая проблема',
    3: 'Почта',
    4: 'Связь',
    5: 'Техника',
    6: 'Безопасность',
    7: 'Операционная система',
    8: 'Office'
}

priorities = {
    0: 'Не определен',
    1: 'Высокий',
    2: 'Средний',
    3: 'Низкий'
}

# Словарь ключевых слов для каждой категории
keywords = {
    0: ['неизвестно', 'неопределенный', 'непонятно', 'странно', 'какая-то', 'какое-то', 'что-то'],
    1: ['деньги', 'бюджет', 'финансы', 'инвестиции', 'акции', 'банк', 'экономика', 'доход', 'расход', 'баланс', 'фондовый рынок', 'налоги', 'кредит', 'депозит', 'валюта', 'облигации', 'страхование', 'рентабельность', 'ликвидность', 'финансовый отчет', ...],
    2: ['сеть', 'интернет', 'соединение', 'маршрутизатор', 'сервер', 'IP', 'VPN', 'протокол', 'шифрование', 'порт', 'Wi-Fi', 'LAN', 'WAN', 'пинг', 'трафик', 'брандмауэр', 'DNS', 'провайдер', 'безопасность сети', 'скорость интернета', ...],
    3: ['почта', 'электронная почта', 'письмо', 'вложение', 'спам', 'рассылка', 'SMTP', 'IMAP', 'почтовый сервер', 'почтовый клиент', 'фильтрация', 'адресат', 'отправитель', 'тема письма', 'подпись', 'автоответчик', 'массовая рассылка', 'письмо-запрос', 'конфиденциальность', 'письмо-уведомление', ...],
    4: ['связь', 'телефон', 'мобильный', 'оператор', 'сигнал', 'звонок', 'SMS', 'голосовая почта', 'роуминг', 'SIM-карта', 'LTE', '4G', '5G', 'сотовая связь', 'базовая станция', 'абонент', 'тариф', 'минуты', 'сообщение', 'передача данных', ...],
    5: ['техника', 'компьютер', 'принтер', 'сканер', 'ноутбук', 'монитор', 'жесткий диск', 'USB', 'мышь', 'клавиатура', 'процессор', 'видеокарта', 'RAM', 'оперативная память', 'SSD', 'HDD', 'материнская плата', 'питание', 'зарядное устройство', 'гаджет', ...],
    6: ['безопасность', 'вирус', 'антивирус', 'шпионское ПО', 'фишинг', 'хакер', 'защита данных', 'шифрование', 'пароль', 'доступ', 'биометрия', 'отпечаток пальца', 'лицензия', 'бэкап', 'восстановление данных', 'контроль доступа', 'аудит', 'угроза', 'безопасность приложений', 'компьютерная безопасность', ...],
    7: ['операционная система', 'Windows', 'Linux', 'macOS', 'обновление', 'установка', 'драйвер', 'системный файл', 'реестр', 'командная строка', 'терминал', 'пользовательский интерфейс', 'GUI', 'процесс', 'задача', 'память', 'диспетчер задач', 'настройки системы', 'безопасный режим', 'системный журнал', ...],
    8: ['Office', 'Word', 'Excel', 'PowerPoint', 'Outlook', 'редактирование', 'таблица', 'презентация', 'документ', 'шаблон', 'форматирование', 'диаграмма', 'график', 'макрос', 'функция', 'формула', 'сортировка', 'фильтрация', 'почтовый слияние', 'электронные таблицы', ...]
}

# Функция для определения категории по ключевым словам
def categorize_text(text):
    category_id = 0
    for cat_id, words in keywords.items():
        if any(word in text for word in words):
            category_id = cat_id
            break
    return categories.get(category_id, 'Не определено')

# Функция для определения приоритета текста на основе его эмоциональной окраски
def determine_priority(text):
    # Ключевые слова для высокого, среднего и низкого приоритета
    high_priority_keywords = ['срочно', 'немедленно', 'важно', 'критический', 'неотложный']
    medium_priority_keywords = ['проблема', 'задержка', 'необходимо', 'требуется', 'ожидается']
    low_priority_keywords = ['информация', 'запрос', 'пожелание', 'рекомендация', 'уведомление']
    
    # Проверка на ключевые слова высокого приоритета
    if any(keyword in text for keyword in high_priority_keywords):
        return priorities[1]  # Высокий
    
    # Проверка на ключевые слова среднего приоритета
    elif any(keyword in text for keyword in medium_priority_keywords):
        return priorities[2]  # Средний
    
    # Проверка на ключевые слова низкого приоритета
    elif any(keyword in text for keyword in low_priority_keywords):
        return priorities[3]  # Низкий
    
    # Проверка на восклицательные знаки как признак высокого приоритета
    elif '!' in text:
        return priorities[1]  # Высокий
    
    # Если ни одно из вышеуказанных условий не выполнено, возвращаем 'Не определен'
    else:
        return priorities[0]  # Не определен

# Основная функция скрипта
def process_texts(texts):
    results = []
    for text in texts:
        category = categorize_text(text)
        priority = determine_priority(text)
        results.append(f'Заявка: {category}, Приоритет: {priority}')
    return results


print(process_texts(texts_to_process))
