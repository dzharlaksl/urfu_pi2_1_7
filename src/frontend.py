"""
Проект: расшифровка сообщений с автоответчика и создание заявок на основе сообщения.
Веб-интерфейс
Программная инженерия, группа 1.7
"""

# импортируем необходимые бибилиотеки
import streamlit as st
#from transcribe import transcribe


@st.cache_resource
def load_model_summary():
    """
    Вызываем функцию загрузки модели
    Кешируем загрузку модели, для экономии ресурсов через декоратор @st.cache_resource
    """

    a = 1
    
    return a


if __name__ == '__main__':
    # выводим приверственный тайтл и кратко обозначаем функционал приложения
    st.title('AI генератор задач для техподдержки')
    st.write("""На основании аудиозаписи автоответчика службы поддержки
             производится перевод аудио в текст, а также определение
             категории задачи и ее приоритета""")

    audio_file = st.file_uploader('Загрузите аудиофайл',
                                  type=['mp3', 'm4a'],
                                  accept_multiple_files=False, key=None,
                                  on_change=None)

    # предлагаем пользователю выбрать, локально запускаем модель или по API
    option = st.selectbox(
        'Локальный запуск распознавания или используем API?',
        ('Локально', 'API'), key='option')

    # проверяем пользовтаельский выбор
    if option == 'Локально':
        st.write('Локальный запуск')
        # вызываем функцию локально
    else:
        st.write('Используем API')
        # вызываем API метод
